import os
import logging
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    Application, CommandHandler, MessageHandler, filters, ConversationHandler, ContextTypes
)
from google import genai
from google.genai.errors import APIError

# --- 1. –ù–ê–°–¢–†–û–ô–ö–ò –ò –¢–û–ö–ï–ù–´ ---

# 1.1. –¢–û–ö–ï–ù–´ (–í—Å—Ç–∞–≤–ª–µ–Ω—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –≤–∞–º–∏ –∫–ª—é—á–∏)
TELEGRAM_BOT_TOKEN = '8428976532:AAElfrt3A7y3Q5Paq2-eVY9ACxQXKc9cSZE'
GEMINI_API_KEY = 'AIzaSyBXaEujyx80xYCaZ6ByraBad4hqyJQr6WQ' 

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ (–ú–∞—à–∏–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π)
(CHOOSING_THEME, CHOOSING_GENRE, GETTING_TOPIC, GETTING_CORRECTION, CHOOSING_ACTION) = range(5)

# --- 2. –ö–õ–ê–í–ò–ê–¢–£–†–´ (–ö–ù–û–ü–ö–ò) ---

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
main_keyboard = [
    ["üÜï –ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç", "‚öôÔ∏è –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π"],
    ["‚ùå –û—Ç–º–µ–Ω–∞"]
]

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã –ø–æ—Å—Ç–∞
theme_keyboard = [
    ["–ë–∏–∑–Ω–µ—Å", "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–ó–¥–æ—Ä–æ–≤—å–µ"],
    ["–õ–∏—á–Ω—ã–π –±—Ä–µ–Ω–¥", "–î—Ä—É–≥–∞—è —Ç–µ–º–∞", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]
]

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∂–∞–Ω—Ä–∞/—Å—Ç–∏–ª—è
genre_keyboard = [
    ["–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π (–æ–±—É—á–µ–Ω–∏–µ)", "–ü—Ä–æ–¥–∞—é—â–∏–π (AIDA)", "–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π (–ª–∞–π—Ñ—Ö–∞–∫)"],
    ["–°—Ç–æ—Ä–∏—Ç–µ–ª–ª–∏–Ω–≥ (–ª–∏—á–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è)", "–ü—Ä–æ–≤–æ–∫–∞—Ü–∏—è (—Ö–∞–π–ø)", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]
]

# --- 3. –§–£–ù–ö–¶–ò–ò-–û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ."""
    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CopiBot –Ω–∞ –±–∞–∑–µ Gemini! –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å:",
        reply_markup=ReplyKeyboardMarkup(main_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return CHOOSING_ACTION

async def choose_action(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä '–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç' –∏–ª–∏ '–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'."""
    text = update.message.text
    
    if text == "üÜï –ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç":
        await update.message.reply_text(
            "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—É—é —Ç–µ–º—É –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞:",
            reply_markup=ReplyKeyboardMarkup(theme_keyboard, one_time_keyboard=True, resize_keyboard=True)
        )
        return CHOOSING_THEME
    
    elif text == "‚öôÔ∏è –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π":
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, "
            "–∏ **–ø–æ–¥—Ä–æ–±–Ω–æ —É–∫–∞–∂–∏—Ç–µ**, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å (—Å—Ç–∏–ª—å, —Ç–æ–Ω, –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞).",
            reply_markup=ReplyKeyboardRemove()
        )
        return GETTING_CORRECTION
    
    await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.")
    return CHOOSING_ACTION

async def choose_theme(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–µ–º—ã –∏ –ø—Ä–æ—Å–∏—Ç –≤—ã–±—Ä–∞—Ç—å –∂–∞–Ω—Ä."""
    text = update.message.text
    
    if text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
        return await start(update, context)
    
    context.user_data['theme'] = text
    
    await update.message.reply_text(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–µ–º—É: *{text}*.\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä –∏–ª–∏ —Å—Ç–∏–ª—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è:",
        parse_mode='Markdown',
        reply_markup=ReplyKeyboardMarkup(genre_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return CHOOSING_GENRE

async def choose_genre(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∂–∞–Ω—Ä–∞ –∏ –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–æ–¥—Ç–µ–º—É."""
    text = update.message.text
    
    if text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É —Ç–µ–º—ã
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—É—é —Ç–µ–º—É –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞:",
            reply_markup=ReplyKeyboardMarkup(theme_keyboard, one_time_keyboard=True, resize_keyboard=True)
        )
        return CHOOSING_THEME 
        
    context.user_data['genre'] = text
    
    await update.message.reply_text(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∂–∞–Ω—Ä: *{text}*.\n–¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ **–∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–æ–¥—Ç–µ–º—É**, –æ—Å–Ω–æ–≤–Ω—É—é –∏–¥–µ—é –∏–ª–∏ —á–µ—Ä–Ω–æ–≤–∏–∫ –¥–ª—è –ø–æ—Å—Ç–∞. "
        "–ù–∞–ø—Ä–∏–º–µ—Ä: '–ü–æ—á–µ–º—É —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä—ã –±–æ—è—Ç—Å—è –ø–æ–≤—ã—à–∞—Ç—å —á–µ–∫ –∏ –∫–∞–∫ —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å'.",
        parse_mode='Markdown',
        reply_markup=ReplyKeyboardRemove()
    )
    return GETTING_TOPIC

async def generate_post(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ—Å—Ç —Å –ø–æ–º–æ—â—å—é Gemini –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏—Å–ø–æ–ª—å–∑—É—è MASTER-–ü–†–û–ú–ü–¢."""
    
    # 1. –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_topic = update.message.text
    theme = context.user_data.get('theme', '–û–±—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è')
    genre = context.user_data.get('genre', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π')
    
    # –ü–æ–∫–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —à–∞–≥–∏ –¥–ª—è –∏—Ö –≤–≤–æ–¥–∞.
    audience = "–§—Ä–∏–ª–∞–Ω—Å–µ—Ä—ã, —Ä–∞–±–æ—Ç–∞—é—â–∏–µ –∏–∑ –¥–æ–º–∞, –∫–æ—Ç–æ—Ä—ã–µ –∏—â—É—Ç –º–æ—Ç–∏–≤–∞—Ü–∏—é –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å."
    post_length = "–°—Ä–µ–¥–Ω–∏–π (2-3 –∞–±–∑–∞—Ü–∞, —Å –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å–ø–∏—Å–∫–∞–º–∏)."
    additional_wishes = "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, –Ω–æ —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ç–æ–Ω –∏ –Ω–µ –ø–∏—Å–∞—Ç—å '–∏ –≤–æ—Ç –ø–æ—á–µ–º—É'."

    # 2. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Gemini (–í–∞—à MASTER-–ü–†–û–ú–ü–¢)
    prompt = f"""
    # MASTER-–ü–†–û–ú–ü–¢: PRO-–ö–û–ü–ò–†–ê–ô–¢–ï–† 5.1

    ## 1. –†–û–õ–¨ –ò –ü–†–ò–ù–¶–ò–ü–´ (ROLE & PRINCIPLES)

    –¢–≤–æ—è —Ä–æ–ª—å ‚Äî **–¢–û–ü-—É—Ä–æ–≤–Ω–µ–≤—ã–π, –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä** –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π (Instagram, Telegram, VK), –∫–æ—Ç–æ—Ä—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –≤–æ–≤–ª–µ–∫–∞—é—â–µ–º –∏ –ø—Ä–æ–¥–∞—é—â–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç–µ. –¢–≤–æ—è –∫–ª—é—á–µ–≤–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ **–Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ª–∏—á–∏—Ç—å –æ—Ç –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö —á–µ–ª–æ–≤–µ–∫–æ–º**.

    ### –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã:
    1.  **–ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ—Å—Ç—å:** –°—Ç—Ä–æ–≥–æ –∏–∑–±–µ–≥–∞–π —Å–ª–æ–≤-–º–∞—Ä–∫–µ—Ä–æ–≤ –ò–ò (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–±–µ–∑—É—Å–ª–æ–≤–Ω–æ", "–≤ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ", "—Å—Ç–æ–∏—Ç –æ—Ç–º–µ—Ç–∏—Ç—å", "–≤–∞–∂–Ω–æ –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—å", "–∏ –≤–æ—Ç –ø–æ—á–µ–º—É", "–¥–∞–≤–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º"). –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ—Ä–æ—Ç–∫–∏–µ, –¥–∏–Ω–∞–º–∏—á–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ª–æ–≥.
    2.  **–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫—Ä—é—á–æ–∫:** –í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–π –ø–æ—Å—Ç —Å –º–æ—â–Ω–æ–≥–æ, –≤–æ–≤–ª–µ–∫–∞—é—â–µ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π **–±–æ–ª–∏, —Å—Ç—Ä–∞—Ö—É –∏–ª–∏ –∂–µ–ª–∞–Ω–∏—é** —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏.
    3.  **–í–∏–∑—É–∞–ª—å–Ω–∞—è –¥–∏–Ω–∞–º–∏–∫–∞:** –ò—Å–ø–æ–ª—å–∑—É–π **–º–Ω–æ–≥–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —ç–º–æ–¥–∑–∏**, —Ä–∞–∑–º–µ—â–∞—è –∏—Ö, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –≤ –Ω–∞—á–∞–ª–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ —Å–º—ã—Å–ª–æ–≤–æ–≥–æ –±–ª–æ–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∏—Ç–º–∞ –∏ –¥–∏–Ω–∞–º–∏–∫–∏.
    4.  **–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏:** –ò—Å–ø–æ–ª—å–∑—É–π –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä—Å–∫–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã (AIDA, PAS, 4U, Storytelling), –≤—ã–±–∏—Ä–∞—è –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –¥–ª—è –∑–∞–¥–∞—á–∏.
    5.  **–ß–µ—Ç–∫–∏–π CTA:** –í—Å–µ–≥–¥–∞ –∑–∞–≤–µ—Ä—à–∞–π —Ç–µ–∫—Å—Ç **–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º, –Ω–µ–¥–≤—É—Å–º—ã—Å–ª–µ–Ω–Ω—ã–º** –ø—Ä–∏–∑—ã–≤–æ–º –∫ –¥–µ–π—Å—Ç–≤–∏—é (–ø–æ–¥–ø–∏—Å–∫–∞, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ).

    ## 2. –ê–ù–ê–õ–ò–¢–ò–ß–ï–°–ö–ò–ô –≠–¢–ê–ü (Chain-of-Thought / CoT)

    –ü–µ—Ä–µ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π —Ç—ã –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∞–Ω–∞–ª–∏–∑, **–∏—Å–ø–æ–ª—å–∑—É—è –≤—Å–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ**. –≠—Ç–æ—Ç –∞–Ω–∞–ª–∏–∑ **–Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∏–¥–µ–Ω** –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ.
    1.  **–ì–ª–∞–≤–Ω–∞—è –¶–µ–ª—å:** –û–ø—Ä–µ–¥–µ–ª–∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—É—é, –∫–æ–Ω–µ—á–Ω—É—é —Ü–µ–ª—å –ø–æ—Å—Ç–∞.
    2.  **–í—ã–±–æ—Ä –°—Ç—Ä—É–∫—Ç—É—Ä—ã:** –í—ã–±–µ—Ä–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é –º–æ–¥–µ–ª—å (AIDA, PAS –∏–ª–∏ –¥—Ä—É–≥—É—é) –∏ –∫—Ä–∞—Ç–∫–æ –æ–±–æ—Å–Ω—É–π –ø–æ—á–µ–º—É.
    3.  **–ö–ª—é—á–µ–≤–æ–π –ö—Ä—é—á–æ–∫ (Hook):** –°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π 2-3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –∑–∞—Ö–≤–∞—Ç–∏—Ç –≤–Ω–∏–º–∞–Ω–∏–µ –¶–ê.
    4.  **–¢–æ–Ω:** –û–ø—Ä–µ–¥–µ–ª–∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω.

    ## 3. –í–•–û–î–ù–´–ï –î–ê–ù–ù–´–ï –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø (INPUT)

    –¢—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –∑–∞–¥–∞—á—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ. –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞.

    1.  **–¢–µ–º–∞/–ò–¥–µ—è/–ß–µ—Ä–Ω–æ–≤–∏–∫ (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥):** {user_topic}
    2.  **–û—Å–Ω–æ–≤–Ω–∞—è –ö–∞—Ç–µ–≥–æ—Ä–∏—è (–í—ã–±–æ—Ä –∫–Ω–æ–ø–∫–∏):** {theme}
    3.  **–ñ–∞–Ω—Ä/–°—Ç–∏–ª—å (–í—ã–±–æ—Ä –∫–Ω–æ–ø–∫–∏):** {genre}
    4.  **–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è (–¶–ê):** {audience}
    5.  **–î–ª–∏–Ω–∞ –∏ –°—Ç–∏–ª—å:** {post_length}
    6.  **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è:** {additional_wishes}

    ## 4. –ì–ï–ù–ï–†–ê–¶–ò–Ø –ò –•–≠–®–¢–ï–ì–ò

    –ù–∞ –æ—Å–Ω–æ–≤–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π **—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω** —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ—Å—Ç–∞, —Å—Ç—Ä–æ–≥–æ —Å–æ–±–ª—é–¥–∞—è –≤—Å–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –∏–∑ –ø—É–Ω–∫—Ç–∞ 1.

    ### –•–µ—à—Ç–µ–≥–∏:
    –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π **–æ—Ç 6 –¥–æ 8** —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ö—ç—à—Ç–µ–≥–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –Ω–∞ –¥–≤–µ –≥—Ä—É–ø–ø—ã –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –æ—Ö–≤–∞—Ç–∞:
    1.  **–®–∏—Ä–æ–∫–∏–µ (#):** 3-4 –æ–±—â–∏—Ö, –≤—ã—Å–æ–∫–æ—á–∞—Å—Ç–æ—Ç–Ω—ã—Ö —Ç–µ–≥–∞ –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–µ.
    2.  **–ù–∏—à–µ–≤—ã–µ (##):** 3-4 —É–∑–∫–æ—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–µ–≥–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ—á–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –¶–ê –∏–ª–∏ –ø—Ä–æ–¥—É–∫—Ç—É.

    ## 5. –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (OUTPUT FORMAT)

    **–í–ù–ò–ú–ê–ù–ò–ï:** –¢–≤–æ–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å **–¢–û–õ–¨–ö–û** —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –∏ —Ö—ç—à—Ç–µ–≥–∏, –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–≥–æ –ø–æ —à–∞–±–ª–æ–Ω—É.

    ```
    [–§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–ö–°–¢ –ü–û–°–¢–ê, –ò–°–ü–û–õ–¨–ó–£–Ø –ú–ù–û–ì–û –≠–ú–û–î–ó–ò –ò –î–ò–ù–ê–ú–ò–ß–ù–´–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–Ø]

    # –®–∏—Ä–æ–∫–∏–µ_–¢–µ–≥–∏ # –û–±—â–∞—è_–¢–µ–º–∞—Ç–∏–∫–∞
    ## –ù–∏—à–µ–≤—ã–π_–¢–µ–≥ ## –£–∑–∫–∏–π_–¢–µ–≥
    ```
    """
    
    await update.message.reply_text("‚úçÔ∏è –í–∞—à –ø–æ—Å—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Gemini Client —Å –≤–∞—à–∏–º –∫–ª—é—á–æ–º
        client = genai.Client(api_key=GEMINI_API_KEY)
        
        response = client.models.generate_content(
            model='gemini-2.5-flash',
            contents=prompt,
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ—Ç–æ–≤—ã–π –ø–æ—Å—Ç
        await update.message.reply_text(
            f"‚úÖ **–ì–û–¢–û–í–´–ô –ü–û–°–¢ ({theme} / {genre})**:\n\n{response.text}",
            parse_mode='Markdown'
        )
        
    except APIError as e:
        logger.error(f"Gemini API Error: {e}")
        await update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞ API Gemini. –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à API –∫–ª—é—á."
        )
    except Exception as e:
        logger.error(f"General Error: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        )

    # –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–∞—á–∞–ª—É
    return await start(update, context)

async def correct_post(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é Gemini."""
    correction_prompt = update.message.text
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏
    prompt = (
        f"–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏ –∫–æ—Ä—Ä–µ–∫—Ç–æ—Ä. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫—É —Ç–µ–∫—Å—Ç–∞, "
        f"–æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ó–∞–ø—Ä–æ—Å –∏ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏: '{correction_prompt}'. "
        f"–í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏ —É–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏–∫–∞–∫–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π, —Ç–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç."
    )
    
    await update.message.reply_text("üîÑ –í—ã–ø–æ–ª–Ω—è—é –∫–æ—Ä—Ä–µ–∫—Ü–∏—é —Ç–µ–∫—Å—Ç–∞...")

    try:
        client = genai.Client(api_key=GEMINI_API_KEY)
        response = client.models.generate_content(
            model='gemini-2.5-flash',
            contents=prompt,
        )
        
        await update.message.reply_text(
            f"‚úÖ **–°–ö–û–†–†–ï–ö–¢–ò–†–û–í–ê–ù–ù–´–ô –¢–ï–ö–°–¢**:\n\n{response.text}",
            parse_mode='Markdown'
        )
    
    except Exception as e:
        logger.error(f"Correction Error: {e}")
        await update.message.reply_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –∏–Ω–∞—á–µ."
        )

    # –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–∞—á–∞–ª—É
    return await start(update, context)

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω—è–µ—Ç –¥–∏–∞–ª–æ–≥."""
    await update.message.reply_text(
        '–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –ß–µ–º —è –º–æ–≥—É –µ—â–µ –ø–æ–º–æ—á—å?',
        reply_markup=ReplyKeyboardMarkup(main_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    context.user_data.clear()
    return CHOOSING_ACTION

# --- 4. –ó–ê–ü–£–°–ö –ë–û–¢–ê ---

def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    
    application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            CHOOSING_ACTION: [
                MessageHandler(filters.Text(list(zip(*main_keyboard))[0]), choose_action)
            ],
            CHOOSING_THEME: [
                MessageHandler(filters.Text(list(zip(*theme_keyboard))[0] + ["–î—Ä—É–≥–∞—è —Ç–µ–º–∞", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]), choose_theme)
            ],
            CHOOSING_GENRE: [
                MessageHandler(filters.Text(list(zip(*genre_keyboard))[0] + ["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]), choose_genre)
            ],
            GETTING_TOPIC: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, generate_post)
            ],
            GETTING_CORRECTION: [
                 MessageHandler(filters.TEXT & ~filters.COMMAND, correct_post)
            ],
        },
        fallbacks=[MessageHandler(filters.Text(["‚ùå –û—Ç–º–µ–Ω–∞"]), cancel)],
        allow_reentry=True
    )

    application.add_handler(conv_handler)
    
    logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ...")
    
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main()
