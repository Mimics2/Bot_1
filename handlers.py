# handlers.py

from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes, ConversationHandler
# ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–≤–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –∏–º–ø–æ—Ä—Ç–∞:
from config import *
from ai_service import MASTER_PROMPT, call_gemini_api
# ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç USERS_DATA –∏ save_users_data –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤
from payment_service import check_access, handle_access_code, USERS_DATA, save_users_data


# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–ò–ê–õ–û–ì–ê ---

# ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ start, choose_action, choose_theme, choose_genre)

async def generate_post(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ—Å—Ç —Å –ø–æ–º–æ—â—å—é Gemini –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
    
    user_topic = update.message.text
    theme = context.user_data.get('theme', '–û–±—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è')
    genre = context.user_data.get('genre', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π')
    user_id_str = str(update.effective_user.id) # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    # ... (–û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –ø—Ä–æ audience, post_length, prompt)

    prompt = MASTER_PROMPT.format(
        user_topic=user_topic,
        theme=theme,
        genre=genre,
        audience=audience,
        post_length=post_length,
        additional_wishes=additional_wishes
    )
    
    # ‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç—ã
    await update.message.reply_text("‚úçÔ∏è –í–∞—à –ø–æ—Å—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")

    result_text = await call_gemini_api(prompt)
    
    # --- –õ–û–ì–ò–ö–ê –°–ü–ò–°–ê–ù–ò–Ø –ì–ï–ù–ï–†–ê–¶–ò–ò ---
    # –°–ø–∏—Å—ã–≤–∞–µ–º –æ–¥–Ω—É –≥–µ–Ω–µ—Ä–∞—Ü–∏—é, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –±–µ–∑–ª–∏–º–∏—Ç (-1)
    if user_id_str in USERS_DATA and USERS_DATA[user_id_str]['generations_left'] > 0:
        USERS_DATA[user_id_str]['generations_left'] -= 1
        save_users_data(USERS_DATA) # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª
        
    # --- –ö–û–ù–ï–¶ –õ–û–ì–ò–ö–ò –°–ü–ò–°–ê–ù–ò–Ø –ì–ï–ù–ï–†–ê–¶–ò–ò ---
        
    await update.message.reply_text(
        f"‚úÖ **–ì–û–¢–û–í–´–ô –ü–û–°–¢ ({theme} / {genre})**:\n\n{result_text}",
        parse_mode='Markdown'
    )

    return await start(update, context)

async def correct_post(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é Gemini."""
    correction_prompt = update.message.text
    user_id_str = str(update.effective_user.id) # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    prompt = (
        f"–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏ –∫–æ—Ä—Ä–µ–∫—Ç–æ—Ä. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫—É —Ç–µ–∫—Å—Ç–∞, "
        f"–æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ó–∞–ø—Ä–æ—Å –∏ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏: '{correction_prompt}'. "
        f"–í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏ —É–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏–∫–∞–∫–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π, —Ç–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç."
    )
    
    # ‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç—ã
    await update.message.reply_text("üîÑ –í—ã–ø–æ–ª–Ω—è—é –∫–æ—Ä—Ä–µ–∫—Ü–∏—é —Ç–µ–∫—Å—Ç–∞...")

    result_text = await call_gemini_api(prompt)

    # --- –õ–û–ì–ò–ö–ê –°–ü–ò–°–ê–ù–ò–Ø –ì–ï–ù–ï–†–ê–¶–ò–ò ---
    # –°–ø–∏—Å—ã–≤–∞–µ–º –æ–¥–Ω—É –≥–µ–Ω–µ—Ä–∞—Ü–∏—é, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –±–µ–∑–ª–∏–º–∏—Ç (-1)
    if user_id_str in USERS_DATA and USERS_DATA[user_id_str]['generations_left'] > 0:
        USERS_DATA[user_id_str]['generations_left'] -= 1
        save_users_data(USERS_DATA) # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª
        
    # --- –ö–û–ù–ï–¶ –õ–û–ì–ò–ö–ò –°–ü–ò–°–ê–ù–ò–Ø –ì–ï–ù–ï–†–ê–¶–ò–ò ---
    
    await update.message.reply_text(
        f"‚úÖ **–°–ö–û–†–†–ï–ö–¢–ò–†–û–í–ê–ù–ù–´–ô –¢–ï–ö–°–¢**:\n\n{result_text}",
        parse_mode='Markdown'
    )

    return await start(update, context)

# ... (—Ñ—É–Ω–∫—Ü–∏—è cancel)
    
