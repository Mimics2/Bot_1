# handlers.py

from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes, ConversationHandler
from config import * # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
from ai_service import MASTER_PROMPT, call_gemini_api
from payment_service import check_access

# --- –ö–õ–ê–í–ò–ê–¢–£–†–´ ---
main_keyboard = [["üÜï –ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç", "‚öôÔ∏è –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π"], ["‚ùå –û—Ç–º–µ–Ω–∞"]]
theme_keyboard = [["–ë–∏–∑–Ω–µ—Å", "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–ó–¥–æ—Ä–æ–≤—å–µ"], ["–õ–∏—á–Ω—ã–π –±—Ä–µ–Ω–¥", "–î—Ä—É–≥–∞—è —Ç–µ–º–∞", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]]
genre_keyboard = [["–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π (–æ–±—É—á–µ–Ω–∏–µ)", "–ü—Ä–æ–¥–∞—é—â–∏–π (AIDA)", "–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π (–ª–∞–π—Ñ—Ö–∞–∫)"], ["–°—Ç–æ—Ä–∏—Ç–µ–ª–ª–∏–Ω–≥ (–ª–∏—á–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è)", "–ü—Ä–æ–≤–æ–∫–∞—Ü–∏—è (—Ö–∞–π–ø)", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"]]


# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–ò–ê–õ–û–ì–ê ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥."""
    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CopiBot –Ω–∞ –±–∞–∑–µ Gemini! –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å:",
        reply_markup=ReplyKeyboardMarkup(main_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return CHOOSING_ACTION

async def choose_action(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä '–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç' –∏–ª–∏ '–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'."""
    text = update.message.text
    
    if text == "üÜï –ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã
        if not await check_access(update.effective_user.id, update, context):
            return CHOOSING_ACTION # –û—Å—Ç–∞–µ–º—Å—è –≤ —ç—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –ø–æ–∫–∞ –Ω–µ –æ–ø–ª–∞—Ç–∏—Ç
            
        await update.message.reply_text(
            "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—É—é —Ç–µ–º—É –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞:",
            reply_markup=ReplyKeyboardMarkup(theme_keyboard, one_time_keyboard=True, resize_keyboard=True)
        )
        return CHOOSING_THEME
    
    elif text == "‚öôÔ∏è –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π":
        if not await check_access(update.effective_user.id, update, context):
            return CHOOSING_ACTION
            
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, "
            "–∏ **–ø–æ–¥—Ä–æ–±–Ω–æ —É–∫–∞–∂–∏—Ç–µ**, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å (—Å—Ç–∏–ª—å, —Ç–æ–Ω, –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞).",
            reply_markup=ReplyKeyboardRemove()
        )
        return GETTING_CORRECTION
    
    await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.")
    return CHOOSING_ACTION

async def choose_theme(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–µ–º—ã –∏ –ø—Ä–æ—Å–∏—Ç –≤—ã–±—Ä–∞—Ç—å –∂–∞–Ω—Ä."""
    text = update.message.text
    
    if text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥": return await start(update, context)
    
    context.user_data['theme'] = text
    
    await update.message.reply_text(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–µ–º—É: *{text}*.\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä –∏–ª–∏ —Å—Ç–∏–ª—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è:",
        parse_mode='Markdown',
        reply_markup=ReplyKeyboardMarkup(genre_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return CHOOSING_GENRE

async def choose_genre(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∂–∞–Ω—Ä–∞ –∏ –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–æ–¥—Ç–µ–º—É."""
    text = update.message.text
    
    if text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥":
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—É—é —Ç–µ–º—É –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞:", reply_markup=ReplyKeyboardMarkup(theme_keyboard, one_time_keyboard=True, resize_keyboard=True))
        return CHOOSING_THEME 
        
    context.user_data['genre'] = text
    
    await update.message.reply_text(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∂–∞–Ω—Ä: *{text}*.\n–¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ **–∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–æ–¥—Ç–µ–º—É**, –æ—Å–Ω–æ–≤–Ω—É—é –∏–¥–µ—é –∏–ª–∏ —á–µ—Ä–Ω–æ–≤–∏–∫ –¥–ª—è –ø–æ—Å—Ç–∞.",
        parse_mode='Markdown',
        reply_markup=ReplyKeyboardRemove()
    )
    return GETTING_TOPIC

async def generate_post(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ—Å—Ç —Å –ø–æ–º–æ—â—å—é Gemini –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
    
    # 1. –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
    user_topic = update.message.text
    theme = context.user_data.get('theme', '–û–±—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è')
    genre = context.user_data.get('genre', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π')
    
    # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–º–ø—Ç–∞ (–º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤–≤–æ–¥ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏)
    audience = "–§—Ä–∏–ª–∞–Ω—Å–µ—Ä—ã, —Ä–∞–±–æ—Ç–∞—é—â–∏–µ –∏–∑ –¥–æ–º–∞, –∫–æ—Ç–æ—Ä—ã–µ –∏—â—É—Ç –º–æ—Ç–∏–≤–∞—Ü–∏—é –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å."
    post_length = "–°—Ä–µ–¥–Ω–∏–π (2-3 –∞–±–∑–∞—Ü–∞, —Å –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å–ø–∏—Å–∫–∞–º–∏)."
    additional_wishes = "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, –Ω–æ —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ç–æ–Ω –∏ –Ω–µ –ø–∏—Å–∞—Ç—å '–∏ –≤–æ—Ç –ø–æ—á–µ–º—É'."

    # 2. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
    prompt = MASTER_PROMPT.format(
        user_topic=user_topic,
        theme=theme,
        genre=genre,
        audience=audience,
        post_length=post_length,
        additional_wishes=additional_wishes
    )
    
    await update.message.reply_text("‚úçÔ∏è –í–∞—à –ø–æ—Å—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")

    # 3. –í—ã–∑–æ–≤ AI
    result_text = await call_gemini_api(prompt)
    
    # 4. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    await update.message.reply_text(
        f"‚úÖ **–ì–û–¢–û–í–´–ô –ü–û–°–¢ ({theme} / {genre})**:\n\n{result_text}",
        parse_mode='Markdown'
    )

    return await start(update, context)

async def correct_post(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é Gemini."""
    correction_prompt = update.message.text
    
    prompt = (
        f"–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏ –∫–æ—Ä—Ä–µ–∫—Ç–æ—Ä. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫—É —Ç–µ–∫—Å—Ç–∞, "
        f"–æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ó–∞–ø—Ä–æ—Å –∏ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏: '{correction_prompt}'. "
        f"–í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏ —É–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏–∫–∞–∫–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π, —Ç–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç."
    )
    
    await update.message.reply_text("üîÑ –í—ã–ø–æ–ª–Ω—è—é –∫–æ—Ä—Ä–µ–∫—Ü–∏—é —Ç–µ–∫—Å—Ç–∞...")

    result_text = await call_gemini_api(prompt)

    await update.message.reply_text(
        f"‚úÖ **–°–ö–û–†–†–ï–ö–¢–ò–†–û–í–ê–ù–ù–´–ô –¢–ï–ö–°–¢**:\n\n{result_text}",
        parse_mode='Markdown'
    )

    return await start(update, context)

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω—è–µ—Ç –¥–∏–∞–ª–æ–≥."""
    await update.message.reply_text(
        '–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –ß–µ–º —è –º–æ–≥—É –µ—â–µ –ø–æ–º–æ—á—å?',
        reply_markup=ReplyKeyboardMarkup(main_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    context.user_data.clear()
    return CHOOSING_ACTION
