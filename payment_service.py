# payment_service.py

from telegram import Update
from telegram.ext import ContextTypes
from config import logger, SUBSCRIPTION_PRICE

# --- –í–ù–ò–ú–ê–ù–ò–ï: –≠–¢–û –ó–ê–ì–õ–£–®–ö–ê –î–õ–Ø –ë–£–î–£–©–ï–ô –ò–ù–¢–ï–ì–†–ê–¶–ò–ò WELLPAY ---
# –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ API WellPay 
# –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—á–µ—Ç–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã.

# Mock-–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ë–î)
MOCK_SUBSCRIPTION_DB = set() 

async def check_access(user_id: int, update: Update, context: ContextTypes.DEFAULT_TYPE) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –æ–ø–ª–∞—Ç–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ—Å—Ç—É–ø –∫ PRO-—Ñ—É–Ω–∫—Ü–∏—è–º."""
    
    # üö® –ò–ú–ò–¢–ê–¶–ò–Ø: –î–æ—Å—Ç—É–ø –¥–∞–µ—Ç—Å—è, –µ—Å–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –≤ "–±–∞–∑–µ"
    if user_id in MOCK_SUBSCRIPTION_DB:
        return True
    
    # üö® –ò–ú–ò–¢–ê–¶–ò–Ø: –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø –Ω–µ –æ–ø–ª–∞—á–µ–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ–ø–ª–∞—Ç–∏—Ç—å
    await update.message.reply_text(
        "üîí **–î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω.**\n"
        "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è PRO-—Ñ—É–Ω–∫—Ü–∏–π CopiBot (Gemini) —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞.\n"
        f"–°—Ç–æ–∏–º–æ—Å—Ç—å: **{SUBSCRIPTION_PRICE} —Ä—É–±.**",
        parse_mode='Markdown'
    )
    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞ WellPay (–ø–æ–∫–∞ —ç—Ç–æ –∑–∞–≥–ª—É—à–∫–∞)
    await create_wellpay_invoice(update, context)
    
    return False

async def create_wellpay_invoice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –°–æ–∑–¥–∞–µ—Ç —Å—á–µ—Ç —á–µ—Ä–µ–∑ WellPay. 
    –≠—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ WellPay.
    """
    logger.info(f"Generating WellPay invoice for user {update.effective_user.id}")
    
    # --- –í–ê–® –ö–û–î –ò–ù–¢–ï–ì–†–ê–¶–ò–ò WELLPAY –ë–£–î–ï–¢ –ó–î–ï–°–¨ ---
    
    # –ü—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫ —ç—Ç–æ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å:
    # 1. –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö (—Ü–µ–Ω–∞, ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    # 2. –í—ã–∑–æ–≤ API WellPay –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É
    # 3. –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    
    await update.message.reply_text(
        "üîó **–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏:** [–û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ WellPay (–∑–∞–≥–ª—É—à–∫–∞)]"
        "(https://wellpay.example.com/invoice_link)",
        parse_mode='Markdown'
    )
    
    # –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    # –î–ª—è —Ç–µ—Å—Ç–∞: /activate_pro
    
async def activate_pro_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ PRO-–¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)."""
    user_id = update.effective_user.id
    MOCK_SUBSCRIPTION_DB.add(user_id)
    await update.message.reply_text(
        "ü•≥ **PRO-–¥–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!** –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç—ã.",
        parse_mode='Markdown'
    )
