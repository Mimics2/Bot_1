# payment_service.py

import json
from datetime import datetime, timedelta
from telegram import Update, ReplyKeyboardRemove
from telegram.ext import ContextTypes
# ‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ —è–≤–Ω–æ, –∫—Ä–æ–º–µ CHOOSING_ACTION (–∏–∑–±–µ–≥–∞–µ–º —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞)
from config import logger, SECRET_ACCESS_CODE, ACCESS_PRICE_DISPLAY 

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –•–†–ê–ù–ò–õ–ò–©–ê ---
USERS_DATA_FILE = 'users_data.json'
TRIAL_DURATION_DAYS = 365 

# --- –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–´ –° –î–ê–ù–ù–´–ú–ò (JSON) ---

def load_users_data() -> dict:
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –∏–∑ JSON-—Ñ–∞–π–ª–∞."""
    try:
        with open(USERS_DATA_FILE, 'r', encoding='utf-8') as f:
            return json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        return {}

def save_users_data(data: dict):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –≤ JSON-—Ñ–∞–π–ª."""
    try:
        with open(USERS_DATA_FILE, 'w', encoding='utf-8') as f:
            json.dump(data, f, indent=4, ensure_ascii=False)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ {USERS_DATA_FILE}: {e}")

# üî• –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ)
USERS_DATA = load_users_data() 

# ... (activate_pro_access, check_access –æ—Å—Ç–∞—é—Ç—Å—è, –∫–∞–∫ –≤ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏)

async def handle_access_code_flow(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "PRO-–¥–æ—Å—Ç—É–ø"."""
    from config import CHOOSING_ACTION # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    
    user_id_str = str(update.effective_user.id)
    
    if user_id_str in USERS_DATA and USERS_DATA[user_id_str].get('expiration_date'):
        # –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω
        await update.message.reply_text("‚úÖ –£ –≤–∞—Å —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω PRO-–¥–æ—Å—Ç—É–ø –¥–æ *{expiration_date}*.".format(**USERS_DATA[user_id_str]), parse_mode='Markdown')
        return CHOOSING_ACTION
    
    # –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø–∞ –Ω–µ—Ç –∏–ª–∏ –æ–Ω –∏—Å—Ç–µ–∫
    await update.message.reply_text(
        f"üîë –í–≤–µ–¥–∏—Ç–µ **—Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥** –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ PRO-–¥–æ—Å—Ç—É–ø–∞ (–¶–µ–Ω–∞: {ACCESS_PRICE_DISPLAY}).\n"
        "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –æ—Ç–º–µ–Ω—ã.",
        parse_mode='Markdown',
        reply_markup=ReplyKeyboardRemove()
    )
    return GETTING_ACCESS_CODE # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∫–æ–¥–∞


async def handle_access_code(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ (–í–´–ó–´–í–ê–ï–¢–°–Ø –ò–ó main.py)."""
    from config import CHOOSING_ACTION # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å
    
    user_input = update.message.text.strip().upper() 
    user_id = update.effective_user.id
        
    if user_input == SECRET_ACCESS_CODE.upper():
        # –ö–æ–¥ –≤–µ—Ä–µ–Ω
        activate_pro_access(user_id)
        await update.message.reply_text(
            "ü•≥ **–ü–û–ó–î–†–ê–í–õ–Ø–Æ! –î–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.**\n"
            "–ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É.",
            parse_mode='Markdown',
            reply_markup=ReplyKeyboardRemove()
        )
        return CHOOSING_ACTION
        
    else:
        # –ö–æ–¥ –Ω–µ–≤–µ—Ä–µ–Ω
        await update.message.reply_text(
            "‚ùå **–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥.** –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–¥ –∏ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ –µ—â–µ —Ä–∞–∑."
        )
        return GETTING_ACCESS_CODE
