# ai_service.py

from google import genai
from google.genai.errors import APIError
# ‚ùå –ò–ó–ú–ï–ù–ï–ù–û: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π
from config import GEMINI_API_KEYS, logger
import itertools
import time # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º time –¥–ª—è –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏

# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∏—Ç–µ—Ä–∞—Ç–æ—Ä –¥–ª—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∫–ª—é—á–µ–π (Round-Robin)
# –û–Ω –±—É–¥–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å –∫–ª—é—á–∏ –∏–∑ —Å–ø–∏—Å–∫–∞
key_cycle = itertools.cycle(GEMINI_API_KEYS)


# –í–∞—à MASTER-–ü–†–û–ú–ü–¢ (–æ—Ñ–æ—Ä–º–ª–µ–Ω –∫–∞–∫ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞)
MASTER_PROMPT = """
# MASTER-–ü–†–û–ú–ü–¢: PRO-–ö–û–ü–ò–†–ê–ô–¢–ï–† 5.1
# ... (–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞) ...
"""

async def call_gemini_api(prompt: str, model: str = 'gemini-2.5-flash') -> str:
    """–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ Gemini API —Å —Ä–æ—Ç–∞—Ü–∏–µ–π –∫–ª—é—á–µ–π."""
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ (—Ä–∞–≤–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∫–ª—é—á–µ–π)
    max_retries = len(GEMINI_API_KEYS)
    
    for attempt in range(max_retries):
        
        # 1. –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –∫–ª—é—á –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
        current_api_key = next(key_cycle)
        logger.info(f"üîë –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{max_retries}. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–ª—é—á, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å {current_api_key[:10]}...")
        
        try:
            # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç–∞ —Å —Ç–µ–∫—É—â–∏–º –∫–ª—é—á–æ–º
            client = genai.Client(api_key=current_api_key)
            
            # 3. –í—ã–ø–æ–ª–Ω—è–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤—ã–∑–æ–≤ API
            response = await client.models.generate_content_async(
                model=model,
                contents=prompt
            )
            
            # 4. –ï—Å–ª–∏ —É—Å–ø–µ—Ö, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç
            logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å –∫–ª—é—á–æ–º {current_api_key[:10]}...")
            return response.text
            
        except APIError as e:
            # 5. –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ API (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ª–∏–º–∏—Ç, –∏–ª–∏ –∫–ª—é—á –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω)
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ API —Å –∫–ª—é—á–æ–º {current_api_key[:10]}...: {e}")
            
            # –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞, –≤—ã—Ö–æ–¥–∏–º
            if attempt == max_retries - 1:
                logger.error("–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ API –∫–ª—é—á–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç.")
                return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—Å–µ –Ω–∞—à–∏ –≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã —Å–µ–π—á–∞—Å –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω—ã –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã (–æ—à–∏–±–∫–∞ API). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            
            # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –∫–ª—é—á
            time.sleep(1) 
            
        except Exception as e:
            # 6. –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
            logger.error(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≤—ã–∑–æ–≤–∞ API: {e}")
            # –í —Å–ª—É—á–∞–µ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ –Ω–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å –∫–ª—é—á, –∞ —Å—Ä–∞–∑—É –≤–µ—Ä–Ω—É—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
            return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞."

    # –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç–∏–∂–∏–º, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫."
