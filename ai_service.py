# ai_service.py

from google import genai
from google.genai.errors import APIError
from config import GEMINI_API_KEY, logger

# –í–∞—à MASTER-–ü–†–û–ú–ü–¢ (–æ—Ñ–æ—Ä–º–ª–µ–Ω –∫–∞–∫ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞)
MASTER_PROMPT = """
# MASTER-–ü–†–û–ú–ü–¢: PRO-–ö–û–ü–ò–†–ê–ô–¢–ï–† 5.1
[... (–û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –ø–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∑–¥–µ—Å—å) ...]
"""

async def call_gemini_api(prompt: str, model: str = 'gemini-2.5-flash') -> str:
    """–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ Gemini API. –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫."""
    try:
        # üî• –ü–†–û–í–ï–†–ö–ê –ö–õ–Æ–ß–ê
        if not GEMINI_API_KEY or 'AIzaSy' not in GEMINI_API_KEY:
            raise APIError("–ö–ª—é—á API –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –≤—ã–≥–ª—è–¥–∏—Ç –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º.")
            
        client = genai.Client(api_key=GEMINI_API_KEY)
        
        response = client.models.generate_content(
            model=model,
            contents=prompt,
        )

        return response.text

    except APIError as e:
        logger.error(f"–û—à–∏–±–∫–∞ Gemini API: {e}")
        return "‚ùå –û–®–ò–ë–ö–ê API: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò. –í–µ—Ä–æ—è—Ç–Ω–æ, –≤–∞—à **–∫–ª—é—á API –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω** –∏–ª–∏ –∏—Å—Ç–µ–∫ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–º–µ–Ω–∏—Ç–µ –µ–≥–æ –≤ config.py."
    except Exception as e:
        logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ Gemini: {e}")
        return f"‚ùå –û–®–ò–ë–ö–ê: –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}"
